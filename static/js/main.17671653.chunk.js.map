{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/hooks/http.hooks.js","components/spinnerLoad/SpinnerLoad.js","components/errorTag/ErrorTag.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundaries/ErrorBoundaries.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","components/singleComic/SingleComic.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","isActive","color","useMarvelService","useState","load","setLoad","error","setError","request","useCallback","url","a","method","body","headers","fetch","responce","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","getCharacter","id","__transformCharacter","getAllComics","getComic","_transformComics","char","name","description","thumbnail","path","extension","homepage","urls","wikipage","comicsData","comics","title","pageCount","language","textObjects","price","prices","SpinnerLoad","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorTag","src","process","alt","View","objectFit","String","length","slice","href","RandomChar","setChar","onCharLoader","NewChar","updateChar","randId","Math","floor","random","then","useEffect","LoadedPage","ErrorPage","charPage","onClick","mjolnir","CharList","onCharSelected","ArrayChars","setArrayChars","loadNewChar","setLoadNewChar","setOffset","loadedAllChars","newChars","onRequstListChar","initial","errorTag","loading","styleBtnLoadNewChars","opacity","disabled","Views","ArrayRef","useRef","onFocus","current","forEach","el","classList","remove","add","focus","li","Array","from","map","indexChar","styleImg","tabIndex","onKeyDown","e","key","ref","event","Skeleton","CharInfo","charId","SkeletPage","defaultProps","defaultProp","comicsList","items","text","ComicsItem","ErrorBoundaries","state","this","props","children","console","log","Component","MainPage","setState","decoration","ComicsList","ArrayComics","setArrayComics","loadNewComics","setLoadNewComics","onRequestListComics","loadedAllComics","newComics","comicses","errortag","spinner","comic","SingleComic","comicId","useParams","setComic","updateComic","onComicLoaded","content","App","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.17671653.chunk.js","sourcesContent":["import './appHeader.scss';\nimport { Link , NavLink } from 'react-router-dom';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\" >\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink end \n                    style={({isActive})=> isActive ? ({color: 'red'}) : null} to=\"/\" >Characters</NavLink></li>\n                    /\n                    <li><NavLink \n                    style={({isActive})=> isActive ? ({color: 'red'}) : null} to=\"/comics\" >Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useHttp } from '../components/hooks/http.hooks';\r\n\r\nconst useMarvelService =()=> { \r\n\r\n const {load , error , request , clearError} = useHttp()\r\n\r\n const _apiBase = `https://gateway.marvel.com:443/v1/public/`;\r\n const _apiKey = `apikey=27c482231617c13cab6f9222965acb80`;\r\n const _offset = 260; \r\n\r\n   const getAllCharacters = async (offset=_offset)=>{ \r\n      let res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);      \r\n      return res.data.results;\r\n   }\r\n\r\n   const getCharacter = async (id)=>{ \r\n      let res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n      return __transformCharacter(res.data.results[0])\r\n   }\r\n\r\n   const getAllComics = async (offset)=>{ \r\n   let res = await request(`${_apiBase}comics?orderBy=title&limit=8&offset=${offset}&${_apiKey}`);\r\n     return res.data.results\r\n   }\r\n\r\n   const getComic = async (id)=>{ \r\n      let res = await request(`https://gateway.marvel.com:443/v1/public/comics/${id}?apikey=27c482231617c13cab6f9222965acb80`)\r\n      return _transformComics(res.data.results[0])\r\n   }\r\n\r\n   const __transformCharacter = (char)=>{ \r\n      return { \r\n         name: char.name, \r\n         description: char.description,\r\n         thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n         homepage: char.urls[0].url,\r\n         wikipage: char.urls[1].url,\r\n         comicsData: char.comics\r\n      }}\r\n\r\n   const _transformComics = (comics) => {\r\n         return {\r\n             id: comics.id,\r\n             title: comics.title,\r\n             description: comics.description || 'There is no description',\r\n             pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n             thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n             language: comics.textObjects.language || 'en-us',\r\n             price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\r\n         }\r\n   }\r\n\r\n      \r\n      return {load , error, getAllCharacters , getCharacter , clearError , getAllComics , getComic}\r\n   }\r\n\r\n\r\nexport default useMarvelService ","import { useState , useCallback } from \"react\";\r\n\r\n\r\nexport const useHttp = ()=>{ \r\n   const [load , setLoad] = useState(false);\r\n   const [error , setError] = useState(false);\r\n\r\n      const request =  useCallback( async(url , method = 'GET' , body = null , headers = { 'Content-Type' : 'application/json'})=>{\r\n\r\n         setLoad(true)\r\n\r\n         try { \r\n            const responce = await fetch ( url , { method , body , headers});\r\n            if (!responce.ok){ \r\n               throw new Error(`Could not fetch ${url} , status ${responce.status}`);\r\n            }\r\n            let data = await responce.json()\r\n\r\n            setLoad(false)\r\n            return data\r\n\r\n         } catch(e){ \r\n            setLoad(false)\r\n            setError(e.message)\r\n            throw e;\r\n         }\r\n\r\n   } , [])\r\n\r\n   const clearError = useCallback(()=> setError(null) , [])\r\n   \r\n   return { load , error , request , clearError }\r\n\r\n}","const SpinnerLoad = () => { \r\n      return (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n              <g transform=\"translate(80,50)\">\r\n              <g transform=\"rotate(0)\">\r\n              <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n              <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n              <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n              </circle>\r\n              </g>\r\n              </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n              <g transform=\"rotate(45)\">\r\n              <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n              <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n              <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n              </circle>\r\n              </g>\r\n              </g><g transform=\"translate(50,80)\">\r\n              <g transform=\"rotate(90)\">\r\n              <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n              <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n              <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n              </circle>\r\n              </g>\r\n              </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n              <g transform=\"rotate(135)\">\r\n              <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n              <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n              <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n              </circle>\r\n              </g>\r\n              </g><g transform=\"translate(20,50.00000000000001)\">\r\n              <g transform=\"rotate(180)\">\r\n              <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n              <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n              <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n              </circle>\r\n              </g>\r\n              </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n              <g transform=\"rotate(225)\">\r\n              <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n              <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n              <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n              </circle>\r\n              </g>\r\n              </g><g transform=\"translate(49.99999999999999,20)\">\r\n              <g transform=\"rotate(270)\">\r\n              <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n              <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n              <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n              </circle>\r\n              </g>\r\n              </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n              <g transform=\"rotate(315)\">\r\n              <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n              <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n              <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n              </circle>\r\n              </g>\r\n              </g>\r\n          </svg>\r\n      )\r\n  }\r\n  \r\nexport default SpinnerLoad ;","const ErrorTag = ()=>{ \r\n   return ( \r\n      <img src={process.env.PUBLIC_URL + \"/error.gif\"} alt=\"Error\" />\r\n   )\r\n}\r\n\r\nexport default ErrorTag;","import './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport {  useEffect, useState } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport SpinnerLoad from '../spinnerLoad/SpinnerLoad';\r\nimport ErrorTag from '../errorTag/ErrorTag';\r\n\r\n\r\n\r\n\r\nconst RandomChar =()=>{ \r\n    const {load , error , getCharacter , clearError} =  useMarvelService(); \r\n    const [char , setChar] = useState({}); \r\n    // const [load , setLoad] = useState(true);\r\n    // const [error , setError] = useState(false);\r\n\r\n\r\n   let onCharLoader = (NewChar) =>{ \r\n        setChar(NewChar);\r\n        // setLoad(false)\r\n    }\r\n    // function onError () { \r\n    //     setError(true)\r\n    //     setLoad(false)\r\n    // }\r\n\r\n    // function onCharChange (){\r\n    //     setLoad(true)\r\n    // }\r\n\r\n    let updateChar = () =>{   \r\n        clearError();\r\n        const randId = Math.floor((Math.random() * 400) + 1011000)\r\n        // onCharChange()\r\n        // marvelService\r\n            getCharacter(randId)\r\n                .then(onCharLoader)\r\n                // .catch(onError)\r\n    }\r\n\r\n    useEffect(()=>{ \r\n       updateChar();\r\n    }, [])\r\n\r\n    const LoadedPage = load ? <SpinnerLoad/> : null ; \r\n    const ErrorPage = error ? <ErrorTag /> : null; \r\n    const charPage = !(error || load) ? <View char={char}/> : null ; \r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {LoadedPage}\r\n            {charPage}\r\n            {ErrorPage}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\" onClick={updateChar}>\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst View = ({char}) => { \r\n    const {name , description , homepage , wikipage , thumbnail} = char;\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n                <img style={thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ? {objectFit: 'contain'} : null}\r\n                src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\r\n                    <div className=\"randomchar__info\">\r\n                        <p className=\"randomchar__name\">{name}</p>\r\n                        <p className=\"randomchar__descr\">\r\n                            {String(description).length > 0 ? (String(description).length > 10 ? `${String(description).slice(0 , 200)}...` : description) : `Not found data for this char`}\r\n                        </p>\r\n                        <div className=\"randomchar__btns\">\r\n                            <a href={homepage} className=\"button button__main\">\r\n                                <div className=\"inner\">homepage</div>\r\n                            </a>\r\n                            <a href={wikipage} className=\"button button__secondary\">\r\n                                <div className=\"inner\">Wiki</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import './charList.scss';\nimport React, { useEffect, useState  ,  useRef} from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorTag from '../errorTag/ErrorTag';\nimport SpinnerLoad from '../spinnerLoad/SpinnerLoad';\nimport PropTypes from 'prop-types';\n\n\n\nconst CharList = ({ onCharSelected } ) => { \n\n    const [ArrayChars, setArrayChars] = useState([]); \n    const [loadNewChar , setLoadNewChar ] = useState(false);\n    const [offset , setOffset] = useState(260);\n    const {load , error , getAllCharacters} = useMarvelService(); \n\n\n    const loadedAllChars = (newChars)=>{ \n        setArrayChars(()=>[...ArrayChars, ...newChars ]);\n            setLoadNewChar(false)\n                setOffset(()=>(offset + 9))\n    }\n\n    useEffect(()=>{ \n        onRequstListChar(offset , false)\n    } , [])\n\n    const onRequstListChar = (offset , initial)=>{\n        initial ? setLoadNewChar(true) : setLoadNewChar(false)\n                getAllCharacters(offset)\n                    .then(loadedAllChars)\n    }\n\n    const errorTag =  error ? <ErrorTag/> : null; \n    const loading = !(error || !load && !loadNewChar || ArrayChars.length !== 0) ? <SpinnerLoad/> : null; \n    const styleBtnLoadNewChars = offset < 1565 ? (loadNewChar ? { opacity: 0.5 } : null) : {display: `none`}; \n\n\n    return ( \n        <div className=\"char__list\">\n        {loading}\n        {errorTag}\n        <Views ArrayChars = {ArrayChars}  onCharSelected = {onCharSelected} />\n        <button disabled={loadNewChar} style = {styleBtnLoadNewChars} className=\"button button__main button__long\" onClick={()=> (onRequstListChar(offset))}>\n            <div className=\"inner\">load more</div>\n        </button>\n         </div>\n    )\n\n}\n\nCharList.propTypes = { \n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;\n\n\n\nconst Views = ({ArrayChars , onCharSelected})=> {\n    let ArrayRef = useRef([]);\n\n    let onFocus = (id)=>{ \n        ArrayRef.current.forEach(el=>{ \n            el.classList.remove(\"char__item__active\")\n        })\n            ArrayRef.current[id].classList.add(\"char__item__active\")\n            ArrayRef.current[id].focus()\n    }\n\n    let li = Array.from(ArrayChars).map(({id , name , thumbnail } , indexChar )=>{\n        const styleImg = (thumbnail.path === `http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available`) ? { objectFit: `contain` } : null;\n        return (\n        <li className=\"char__item\" \n        onClick={()=>{\n            onCharSelected(id) ;\n            onFocus(indexChar) ;\n                    }}\n         tabIndex={0}\n         onKeyDown = {(e)=>{if (e.key === \"Enter\") { \n            onFocus(indexChar)\n         }}}\n         ref = {(event)=>{ ArrayRef.current[indexChar]=event }} \n         key={id}>\n        <img style={styleImg} src={`${thumbnail.path}.${thumbnail.extension}`} alt={name}/>\n        <div className=\"char__name\">{name}</div>\n        </li>\n        )\n\n    })\n    return (\n        <>\n        <ul className=\"char__grid\">\n            {li}\n        </ul>\n        </>\n    )\n}\n\n\n\n\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/MarvelService';\nimport SpinnerLoad from '../spinnerLoad/SpinnerLoad';\nimport ErrorTag from '../errorTag/ErrorTag';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\n\n\nconst CharInfo = ({charId})=>{ \n    const [char , setChar] = useState(null)\n    const {load , error , getCharacter } = useMarvelService();  \n    useEffect(()=>{ \n        updateChar()\n    }, [])\n    useEffect(()=>{\n        updateChar()\n    } , [charId])\n\n    let updateChar = () =>{ \n        if (!charId) { \n            return;\n        }\n            getCharacter(charId)\n                .then(char=> setChar(char))\n    }\n    const SkeletPage = char || load || error ?  null : <Skeleton/>; \n    const LoadedPage = load ? <SpinnerLoad/> : null ; \n    const ErrorPage = error ? <ErrorTag /> : null; \n    const charPage = !(error || load || !char) ? <View char={char}/> : null ; \n    return (\n        <div className=\"char__info\">\n            {SkeletPage}\n            {LoadedPage}\n            {ErrorPage}\n            {charPage}\n        </div>\n    )\n}\n\n\n// class CharInfo extends Component { \n\n\n//     state = {\n//         char: null,\n//         load: false,\n//         error: false\n//     }\n\n\n//     componentDidMount(){ \n//         this.updateChar()\n//     }\n\n\n//     componentDidUpdate(prevProps){ \n\n//         if (this.props.charId !== prevProps.charId) { \n//             this.updateChar()\n//         }\n//     }\n\n\n//     updateChar = () =>{ \n//         const {charId} = this.props; \n//         if (!charId) { \n//             return;\n//         }\n//         this.onCharChange()\n//         this.marvelService \n//             .getCharacter(charId)\n//                 .then(this.onCharLoader)\n//                 .catch(this.onError)\n//     }\n\n//     onCharLoader = (char) =>{ \n//         this.setState({char , load: false})\n//     }\n\n//     onError = () => { \n//         this.setState({error: true , load: false})\n//     }\n\n//     onCharChange = ()=>{ \n//         this.setState({\n//             load: true\n//         })\n//     }\n\n\n//     render(){ \n//         const {char , load , error} = this.state;\n\n//         const SkeletPage = char || load || error ?  null : <Skeleton/>; \n//         const LoadedPage = load ? <SpinnerLoad/> : null ; \n//         const ErrorPage = error ? <ErrorTag /> : null; \n//         const charPage = !(error || load || !char) ? <View char={char}/> : null ; \n\n\n\n//         return (\n//         <div className=\"char__info\">\n//             {SkeletPage}\n//             {LoadedPage}\n//             {ErrorPage}\n//             {charPage}\n//         </div>\n//     )\n//     }\n// }\n\n\nCharInfo.defaultProps = { \n    defaultProp: `любой пропс можно так задать по дефолту`\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\n\n\n\nconst View = ({char})=>{ \n    const {name ,  description , homepage , wikipage ,  thumbnail , comicsData : {items}} = char;\n\n    const styleImg = (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") ? {objectFit: `contain`} : null ; \n\n\n\n\n    const comicsList = items.slice(0 , 9).map(({name} , id) => { \n        return (\n        <ComicsItem key={id} text = {name}/>\n        )   \n    })\n\n\n\n\n\n    return (\n        <>\n        <div className=\"char__basics\">\n                        <img style={styleImg} src={thumbnail} alt={name}/>\n                        <div>\n                            <div className=\"char__info-name\">{name}</div>\n                            <div className=\"char__btns\">\n                                <a href={homepage} className=\"button button__main\">\n                                    <div className=\"inner\">homepage</div>\n                                </a>\n                                <a href={wikipage} className=\"button button__secondary\">\n                                    <div className=\"inner\">Wiki</div>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"char__descr\">\n                     {description.length < 1 ? `Not found data for this char` : description}\n                    </div>\n                    <div className=\"char__comics\">Comics:</div>\n                    <ul className=\"char__comics-list\">\n                            {comicsList}\n                    </ul>\n        </>\n    )\n}\n\n\nconst ComicsItem = ({text})=>{ \n\n    return (\n        <>\n        <li className=\"char__comics-item\">\n        {text}\n        </li>\n        </>\n    )\n}\n\n\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorTag from \"../errorTag/ErrorTag\";\r\n\r\n\r\n\r\nclass ErrorBoundaries extends Component { \r\n\r\n   state = { \r\n      error: false\r\n   }\r\n   \r\n   // componentDidCatch(error , infEr) { \r\n   //    console.log(error);\r\n   //    //we can change component state in this line but it's old method better use new method getDerivedStateFromError\r\n   //    // this.setState({ \r\n   //    //    error: true\r\n   //    // })\r\n   // }\r\n\r\n   static getDerivedStateFromError(error) { \r\n      //we can't used setState now we should return object \r\n      console.log(error);\r\n      return { \r\n         error: true\r\n      }\r\n   }\r\n   render() { \r\n\r\n      if (this.state.error) { \r\n         return (         \r\n         <ErrorTag/>\r\n         )\r\n      }\r\n      return ( \r\n         this.props.children\r\n      )\r\n      \r\n   }\r\n}\r\n\r\n\r\nexport default ErrorBoundaries;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundaries from \"../errorBoundaries/ErrorBoundaries\";\r\nimport decoration from '../../resources/img/vision.png';\r\nimport { useState } from \"react\";\r\n\r\nconst MainPage = ()=>{ \r\n\r\n   const [state, setState] = useState(null);\r\n\r\n   let onCharSelected = (id)=>{ \r\n       setState(id)\r\n   }\r\n\r\n   return ( \r\n      <>\r\n   <ErrorBoundaries>\r\n         <RandomChar/>\r\n   </ErrorBoundaries>\r\n       <div className=\"char__content\">\r\n            <CharList onCharSelected = {onCharSelected}/>\r\n                <ErrorBoundaries>\r\n                    <CharInfo charId = {state}/>\r\n                </ErrorBoundaries>\r\n       </div>\r\n    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n    \r\n      </>\r\n   )\r\n}\r\n\r\n\r\nexport default MainPage;","import './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport SpinnerLoad from '../spinnerLoad/SpinnerLoad';\nimport { useEffect  , useState } from 'react';\nimport ErrorTag from '../errorTag/ErrorTag';\nimport { Link } from 'react-router-dom';\n\n\n\nconst ComicsList = ()=> { \n    const [ArrayComics, setArrayComics] = useState([]); \n    const [loadNewComics , setLoadNewComics ] = useState(false);\n    const [offset , setOffset] = useState(5);\n    const {error , load , getAllComics } = useMarvelService();\n\n    useEffect(()=>{\n       onRequestListComics(offset , false)\n    } , [])\n\n    const loadedAllComics = (newComics)=>{\n        setArrayComics([...ArrayComics , ...newComics]);\n            setLoadNewComics(true);\n                setOffset(()=>(offset+5))\n    }\n\n\n    const onRequestListComics = (offset , initial)=>{ \n        initial ? setLoadNewComics(true) : setLoadNewComics(false)\n        getAllComics(offset)\n            .then(loadedAllComics)\n    }\n    \n    const comicses = Array.from(ArrayComics).map(({title , prices , id , thumbnail : {extension , path }})=>(\n        <li className=\"comics__item\" key={id}>\n        <Link to={`${id}`}>\n            <img src={`${path}.${extension}`} alt={title} className=\"comics__item-img\"/>\n            <div className=\"comics__item-name\">{title}</div>\n            <div className=\"comics__item-price\">{prices[0].price}</div>\n        </Link>\n    </li>\n    ))\n        \n    const errortag = error ? <ErrorTag/> : null;\n    const spinner = (load && ArrayComics.length === 0) ? <SpinnerLoad/>  : null; \n\n    return (\n\n        <div className=\"comics__list\">\n                 {spinner}\n                 {errortag}\n            <ul className=\"comics__grid\">\n                {comicses}\n            </ul>\n            <button className=\"button button__main button__long\">\n                <div disabled = {!loadNewComics} style={loadNewComics ? null : {opacity:'0.8'}} className=\"inner\" onClick={()=>{onRequestListComics(offset)}}>load more</div>\n            </button>\n        </div>\n    )\n    \n}\n\nexport default ComicsList;","import './singleComic.scss';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport { useEffect, useState } from 'react';\nimport ErrorTag from '../errorTag/ErrorTag';\nimport SpinnerLoad from '../spinnerLoad/SpinnerLoad';\n\nconst SingleComic = () => {\n    const {comicId} = useParams();\n    const [comic , setComic ] = useState(null)\n    const { load , error, getComic , clearError } = useMarvelService()\n\n    \n    useEffect(()=>{\n        updateComic()\n    } , [comicId])\n\n    let updateComic = () =>{ \n       clearError()\n            getComic(comicId)\n                .then(onComicLoaded)\n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    }\n\n    const LoadedPage = load ? <SpinnerLoad/> : null ; \n    const ErrorPage = error ? <ErrorTag /> : null; \n    const content = !(error || load || !comic) ? <Views comic={comic}/> : null;\n\n    return (\n        <>\n            {ErrorPage}\n            {LoadedPage}\n            {content}\n        </>\n\n\n    )\n}\n\nconst Views = ({comic})=>{ \n    const {title, description, pageCount, thumbnail, language, price} = comic;\n    return ( \n        <div className=\"single-comic\">\n        <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n        <div className=\"single-comic__info\">\n            <h2 className=\"single-comic__name\">{title}</h2>\n            <p className=\"single-comic__descr\">{description}</p>\n            <p className=\"single-comic__descr\">{pageCount}</p>\n            <p className=\"single-comic__descr\">Language: {language}</p>\n            <div className=\"single-comic__price\">{price}</div>\n        </div>\n        <Link end to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\n\nexport default SingleComic;","import AppHeader from \"../appHeader/AppHeader\";\nimport { BrowserRouter as Router , Route , Routes } from \"react-router-dom\";\nimport {MainPage , ComicsPage , SingleComic } from '../pages'\nimport ErrorTag from \"../errorTag/ErrorTag\";\n\n\nconst App = ()=>{ \n\n\n    return ( \n        <Router>\n        <div className=\"app\">\n        <AppHeader/>\n            <main>\n                <Routes>\n                     <Route path={'/'} element={<MainPage/>}/>\n                     <Route path={'comics'} element={<ComicsPage/>}/>\n                     <Route path={'/comics/:comicId'} element={<SingleComic/>}/>\n                     <Route path=\"*\" element={<ErrorTag/>}/>\n                </Routes>\n            </main>   \n        </div>\n        </Router>\n    )\n}\n\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App.js';\nimport './style/style.scss';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n\n\n"],"sourceRoot":""}